#!/usr/bin/env bash

IMAGE=dokku/continuous
APP=continuous
ID=$(docker ps | grep "$APP:latest" |  awk '{print $1}')
APP_PATH=$DOKKU_ROOT/$APP

remove_existing_key() {
  sed -i '/NAME=continuous/d' ~/.ssh/authorized_keys
}

build_app() {
  token=$1
  mkdir -p $APP_PATH
  mkdir -p $APP_PATH/ssh
  mkdir -p $APP_PATH/repos
  echo "export GITHUBTOKEN=$token" > $APP_PATH/ENV
  remove_existing_key
  cd $PLUGIN_PATH/$APP/app && tar c . | dokku receive $APP
}

delete_app() {
  remove_existing_key
  dokku delete $APP
}

case "$1" in
  continuous:start)
    token=$2
    if [[ "$token" == "" ]]; then
      echo "Github Token must be passed in to start";
      exit 1
    fi
    if [[ "$ID" != "" ]]; then
      echo "Continuous container already running with ID: ${ID}"
    else
      stopped_id=$(docker ps -a | grep "$APP:latest[[:space:]].\+[[:space:]]dokku-continuous[[:space:]]*$" |  awk '{print $1}')
      if [[ "$stopped_id" != "" ]]; then
        docker start $stopped_id
      else
        build_app $token
      fi
    fi
    ;;
  continuous:stop)
    if [[ "$ID" == "" ]]; then
      docker stop $ID
      echo "$APP stopped"
    fi
    ;;
  continuous:rebuild)
    echo "Rebuilding $APP"
    source $APP_PATH/ENV
    token="$GITHUBTOKEN"
    if [[ -f "$DOKKU_ROOT/$APP/CONTAINER" ]]; then
      oldid=$(< "$DOKKU_ROOT/$APP/CONTAINER")
      docker inspect $oldid &> /dev/null && docker kill $oldid > /dev/null
    fi
    build_app $token
    ;;
  continuous:delete)
    echo "Deleting $APP"
    delete_app
    echo "$APP deleted"
    ;;
  help)
   #continous:start                                 Start continuous web server
    cat && cat<<EOF
    continous:start <github token>                  Start continuous web server
EOF
    ;;
esac
