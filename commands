#!/usr/bin/env bash

IMAGE=dokku/continuous
APP=continuous
ID=$(docker ps | grep "$APP:latest" |  awk '{print $1}')
APP_PATH=$DOKKU_ROOT/$APP

remove_existing_key() {
  sed -i '/NAME=continuous/d' ~/.ssh/authorized_keys
}

case "$1" in
  continuous:start)
    token=$2
    if [[ "$token" == "" ]]; then
      echo "Github Token must be passed in to start";
      exit 1
    fi
    if [[ "$ID" != "" ]]; then
      echo "Continuous container already running with ID: ${ID}"
    else
      stopped_id=$(docker ps -a | grep "$APP:latest[[:space:]].\+[[:space:]]dokku-continuous[[:space:]]*$" |  awk '{print $1}')
      if [[ "$stopped_id" != "" ]]; then
        docker start $stopped_id
      else
        mkdir -p $APP_PATH
        mkdir $APP_PATH/ssh
        echo "export GITHUBTOKEN=$token" > $APP_PATH/ENV
        cd $PLUGIN_PATH/$APP/app && tar c . | dokku receive $APP
        remove_existing_key
        ssh_key=$APP_PATH/ssh/id_rsa.pub
        sleep 2 #wait for docker startup
        if [[ -f "$ssh_key" ]]; then
          cat $ssh_key | sshcommand acl-add dokku continuous
        else
          echo "$ssh_key doesn't exist"
        fi
      fi
    fi
    ;;
  continuous:stop)
    if [[ "$ID" == "" ]]; then
      docker stop $ID
      echo "$APP stopped"
    fi
    ;;
  continuous:delete)
    echo "Deleting $APP"
    remove_existing_key
    dokku delete $APP
    echo "$APP deleted"
    ;;
  help)
   #continous:start                                 Start continuous web server
    cat && cat<<EOF
    continous:start <github token>                  Start continuous web server
EOF
    ;;
esac
